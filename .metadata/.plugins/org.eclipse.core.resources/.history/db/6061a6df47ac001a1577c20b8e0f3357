/*
 * echoserver.c
 *
 *  Created on: 2020. 5. 31.
 *      Author: eziya76@gmail.com
 */

#include <echoserver.h>
#include "FreeRTOS.h"
#include "task.h"
#include "main.h"
#include "cmsis_os.h"

#include "wizInterface.h"

#include <stdio.h>

#define LISTEN_PORT	7 	//server port

static uint8_t serverIP[] = { SERVER_IP1, SERVER_IP2, SERVER_IP3, SERVER_IP4 };
static uint16_t localPort = 50000;

//tcp client task
void StartWizEchoServerTask(void const *argument) {

	int32_t ret;

	if(!WIZ_ChipInit())
	{
		printf("WIZ_ChipInit failed.\n");
		vTaskDelete(NULL);	//clear task
	}

	if(!WIZ_NetworkInit())
	{
		printf("WIZ_NetworkInit failed.\n");
		vTaskDelete(NULL);	//clear task
	}


	while (1) {
		//create socket
		ret = socket(CLIENT_SOCKET, Sn_MR_TCP, LISTEN_PORT, SF_TCP_NODELAY);

		if (ret < 0) {
			HAL_GPIO_TogglePin(LED_RED_GPIO_Port, LED_RED_Pin);
			printf("socket failed{%ld}.\n", ret);
			close(CLIENT_SOCKET);
			osDelay(100);
			continue;
		}

		while(getSn_SR(CLIENT_SOCKET) != SOCK_INIT)
		{
			osDelay(10);
		}

		ret = listen(CLIENT_SOCKET);
		if (ret < 0) {
			HAL_GPIO_TogglePin(LED_RED_GPIO_Port, LED_RED_Pin);
			printf("listen failed{%ld}.\n", ret);
			close(CLIENT_SOCKET);
			osDelay(100);
			continue;
		}

		while(getSn_SR(CLIENT_SOCKET) == SOCK_LISTEN)
		{
			osDelay(10);
		}

		//client accepted
		if(getSn_SR(CLIENT_SOCKET) == SOCKET_ESTABLISHED)
		{
			ret = recv(CLIENT_SOCKET, buffer, sizeof(buffer));
			if (ret < 0) {
				HAL_GPIO_TogglePin(LED_RED_GPIO_Port, LED_RED_Pin);
				printf("recv failed.{%d}\n", ret);
				close(CLIENT_SOCKET); //unexpected close
				continue;
			}

			ret = send(CLIENT_SOCKET, buffer, sizeof(buffer));
			if (ret < 0) {
				HAL_GPIO_TogglePin(LED_RED_GPIO_Port, LED_RED_Pin);
				printf("send failed{%d}.\n", ret);
				close(CLIENT_SOCKET); //unexpected close
				continue;
			}
		}
		else
		{
			printf("getSn_SR() != SOCKET_ESTABLISHED.\n");
		}

		disconnect(CLIENT_SOCKET);
		close(CLIENT_SOCKET);
	}

	vTaskDelete(NULL);	//clear task
}
