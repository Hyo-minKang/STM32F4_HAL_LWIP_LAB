/*
 * tcpclient.c
 *
 *  Created on: 2020. 5. 31.
 *      Author: eziya76@gmail.com
 */

#include "main.h"
#include "tcpclient.h"
#include "wizInterface.h"
#include "wizchip_conf.h"
#include "socket.h"

void WIZClientTask(void const *argument)
{
	int8_t ret;
	uint8_t sn = 0;
	uint8_t buf[2048] = {0,};

	reg_wizchip_cs_cbfunc(WIZ_SPI_Select, WIZ_SPI_Deselect);
	reg_wizchip_spi_cbfunc(WIZ_SPI_RxByte, WIZ_SPI_TxByte);

	wizchip_init(bufSize, bufSize);
	wiz_NetInfo netInfo = {
			.mac 	= {0x00, 0x08, 0xdc, 0xab, 0xcd, 0xef},	// Mac address
			.ip 	= {192, 168, 1, 192},					// IP address
			.sn 	= {255, 255, 255, 0},					// Subnet mask
			.gw 	= {192, 168, 1, 1}};					// Gateway address
	wizchip_setnetinfo(&netInfo);
	wizchip_getnetinfo(&netInfo);

	while(1)
	{
		ret = socket(sn, Sn_MR_TCP, 3000, 0);
		if(ret < 0)
		{
			printf("socket failed.\n");
			close(sn);
			break;
		}

		while(1)
		{
			memset(&packet, 0, sizeof(struct time_packet));
			packet.head = 0xAE; //head
			packet.type = REQ; //request type
			packet.tail = 0xEA; //tail

			ret = send(sn, buf, sizeof(struct time_packet));
			if(ret < 0)
			{
				printf("send failed.\n");
				disconnect(sn);
				close(sn);
				break;
			}

			ret = recv(sn, buf, sizeof(struct time_packet));
			if(ret < 0)
			{
				printf("recv failed.\n");
				disclose(sn);
				close(sn);
				break;
			}
		}
	}
}
